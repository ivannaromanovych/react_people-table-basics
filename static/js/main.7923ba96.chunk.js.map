{"version":3,"sources":["App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/PageNotFound.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","role","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","name","sex","PersonItem","isSelected","mother","father","born","died","motherName","fatherName","PeopleTable","people","findPerson","find","selectedSlug","useParams","map","PeoplePage","useState","isError","setIsError","isLoading","setIsLoading","setPeople","useEffect","catch","finally","everythingOk","length","isEmpty","PageNotFound","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7923ba96.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport './App.scss';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => (\n  cn('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getLinkClass}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={getLinkClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={cn(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n  isSelected?: boolean,\n  mother: Person | null,\n  father: Person | null,\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  isSelected = false,\n  mother,\n  father,\n}) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn(\n        { 'has-background-warning': isSelected },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {mother ? (\n        <td>\n          <PersonLink person={mother} />\n        </td>\n      ) : (\n        <td>{person.motherName || '-'}</td>\n      )}\n\n      {father ? (\n        <td>\n          <PersonLink person={father} />\n        </td>\n      ) : (\n        <td>{person.fatherName || '-'}</td>\n      )}\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonItem } from './PersonItem';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const findPerson = (name: string | null) => {\n    return people.find(person => person.name === name) || null;\n  };\n\n  const { slug: selectedSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table\n  is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n            mother={findPerson(person.motherName)}\n            father={findPerson(person.fatherName)}\n            isSelected={person.slug === selectedSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage = () => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const everythingOk = !isError && !isLoading && people.length > 0;\n  const isEmpty = !isError && !isLoading && people.length === 0;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? (\n            <Loader />\n          ) : (isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          ))}\n          {isEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {everythingOk && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route\n        path=\"/home\"\n        element={<Navigate to=\"/\" replace />}\n      />\n\n      <Route\n        path=\"/\"\n        element={<App />}\n      >\n        <Route index path=\"/\" element={<HomePage />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}