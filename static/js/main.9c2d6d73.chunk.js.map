{"version":3,"sources":["utils/helpers.ts","components/Navigation.tsx","App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","types/Sex.ts","components/PersonLink.tsx","utils/constants.ts","components/PersonItem.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getNavLinkClass","isActive","cn","findPersonByName","people","name","find","person","Navigation","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","Sex","PersonLink","slug","sex","Female","TABLE_HEADERS","PersonItem","isSelected","born","died","motherName","fatherName","mother","father","PeopleTable","selectedSlug","useParams","map","header","PeoplePage","useState","isError","setIsError","isLoading","setIsLoading","setPeople","useEffect","newPeople","catch","finally","isErrorDuringLoading","isEverythingOk","length","isNoPeopleOnServer","NotFoundPage","Root","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9c2d6d73.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Person } from '../types/Person';\n\nexport const getNavLinkClass = ({ isActive }: { isActive: boolean }) => (\n  cn('navbar-item', { 'has-background-grey-lighter': isActive })\n);\n\nexport const findPersonByName = (people: Person[], name: string | null) => {\n  return people.find(person => person.name === name) || null;\n};\n","import { NavLink } from 'react-router-dom';\nimport { getNavLinkClass } from '../utils/helpers';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={getNavLinkClass}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={getNavLinkClass}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <Outlet />\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const enum Sex {\n  Male = 'm',\n  Female = 'f',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { Sex } from '../types/Sex';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n}) => {\n  const { slug, name, sex } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={cn(\n        { 'has-text-danger': sex === Sex.Female },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","export const TABLE_HEADERS = [\n  'Name',\n  'Sex',\n  'Born',\n  'Died',\n  'Mother',\n  'Father',\n];\n\nexport const NOT_SET_PARRENT_VALUE = '-';\n","import cn from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\nimport { NOT_SET_PARRENT_VALUE } from '../utils/constants';\n\ntype Props = {\n  person: Person,\n  isSelected?: boolean,\n};\n\nexport const PersonItem: React.FC<Props> = ({\n  person,\n  isSelected = false,\n}) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn(\n        { 'has-background-warning': isSelected },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || NOT_SET_PARRENT_VALUE\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || NOT_SET_PARRENT_VALUE\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonItem } from './PersonItem';\nimport { TABLE_HEADERS } from '../utils/constants';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug: selectedSlug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table\n  is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {TABLE_HEADERS.map(header => (\n            <th key={header}>{header}</th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n            isSelected={person.slug === selectedSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../types/Person';\nimport { getPeople } from '../api';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { findPersonByName } from '../utils/helpers';\n\nexport const PeoplePage = () => {\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => {\n        const newPeople = response.map(person => ({\n          ...person,\n          mother: findPersonByName(response, person.motherName),\n          father: findPersonByName(response, person.fatherName),\n        }));\n\n        setPeople(newPeople);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n  const isErrorDuringLoading = !isLoading && isError;\n  const isEverythingOk = !isError && !isLoading && !!people.length;\n  const isNoPeopleOnServer = !isError && !isLoading && !people.length;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n          {isErrorDuringLoading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          {isEverythingOk && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Route,\n  Routes,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route\n        path=\"/\"\n        element={<App />}\n      >\n        <Route\n          path=\"/home\"\n          element={<Navigate to=\"/\" replace />}\n        />\n\n        <Route index path=\"/\" element={<HomePage />} />\n\n        <Route path=\"people\">\n          <Route path=\":slug?\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}